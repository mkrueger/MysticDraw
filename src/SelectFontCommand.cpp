#include<SelectFontCommand.hpp>

// class SelectOutlineCommand members
unsigned char SelectAnsi[4096] = {
	218,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,191,8,179,
	8,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,
	27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,
	27,0,27,0,27,0,27,0,27,0,27,83,27,69,27,76,27,69,27,67,
	27,84,27,32,27,79,27,85,27,84,27,76,27,73,27,78,27,69,27,32,
	27,70,27,79,27,78,27,84,27,32,27,83,27,84,27,89,27,76,27,69,
	27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,
	27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,
	27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,0,27,179,8,195,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,180,8,179,
	8,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,15,32,15,32,2,65,11,218,2,196,2,196,2,196,2,196,2,196,
	2,191,2,32,11,66,11,213,2,205,2,205,2,205,2,205,2,205,2,184,
	2,32,2,67,11,218,2,196,2,196,2,196,2,196,2,196,2,191,2,32,
	2,68,11,213,2,205,2,205,2,205,2,205,2,205,2,184,2,32,2,69,
	11,214,2,196,2,196,2,196,2,196,2,196,2,191,2,32,2,70,11,201,
	2,205,2,205,2,205,2,205,2,205,2,184,2,32,2,71,11,214,2,196,
	2,196,2,196,2,196,2,196,2,191,2,32,2,72,11,201,2,205,2,205,
	2,205,2,205,2,205,2,184,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,179,2,32,2,218,2,196,2,191,2,32,
	2,179,2,32,11,32,11,179,2,32,2,218,2,196,2,191,2,32,2,179,
	2,32,2,32,11,179,2,32,2,213,2,205,2,184,2,32,2,179,2,32,
	2,32,11,179,2,32,2,213,2,205,2,184,2,32,2,179,2,32,2,32,
	11,186,2,32,2,218,2,196,2,183,2,32,2,179,2,32,2,32,11,186,
	2,32,2,218,2,196,2,183,2,32,2,179,2,32,2,32,11,186,2,32,
	2,213,2,205,2,187,2,32,2,179,2,32,2,32,11,186,2,32,2,213,
	2,205,2,187,2,32,2,179,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,179,2,32,2,192,2,196,2,217,2,32,
	2,179,2,32,11,32,11,179,2,32,2,212,2,205,2,190,2,32,2,179,
	2,32,2,32,11,179,2,32,2,192,2,196,2,217,2,32,2,179,2,32,
	2,32,11,179,2,32,2,212,2,205,2,190,2,32,2,179,2,32,2,32,
	11,186,2,32,2,192,2,196,2,189,2,32,2,179,2,32,2,32,11,186,
	2,32,2,212,2,205,2,188,2,32,2,179,2,32,2,32,11,186,2,32,
	2,192,2,196,2,189,2,32,2,179,2,32,2,32,11,186,2,32,2,212,
	2,205,2,188,2,32,2,179,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,179,2,32,2,218,2,196,2,191,2,32,
	2,179,2,32,11,32,11,179,2,32,2,218,2,196,2,191,2,32,2,179,
	2,32,2,32,11,179,2,32,2,213,2,205,2,184,2,32,2,179,2,32,
	2,32,11,179,2,32,2,213,2,205,2,184,2,32,2,179,2,32,2,32,
	11,186,2,32,2,218,2,196,2,183,2,32,2,179,2,32,2,32,11,186,
	2,32,2,218,2,196,2,183,2,32,2,179,2,32,2,32,11,186,2,32,
	2,213,2,205,2,187,2,32,2,179,2,32,2,32,11,186,2,32,2,213,
	2,205,2,187,2,32,2,179,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,192,2,196,2,217,2,32,2,192,2,196,
	2,217,2,32,11,32,11,192,2,196,2,217,2,32,2,192,2,196,2,217,
	2,32,2,32,11,212,2,205,2,190,2,32,2,212,2,205,2,190,2,32,
	2,32,11,212,2,205,2,190,2,32,2,212,2,205,2,190,2,32,2,32,
	11,211,2,196,2,217,2,32,2,211,2,196,2,217,2,32,2,32,11,211,
	2,196,2,217,2,32,2,211,2,196,2,217,2,32,2,32,11,200,2,205,
	2,190,2,32,2,200,2,205,2,190,2,32,2,32,11,200,2,205,2,190,
	2,32,2,200,2,205,2,190,2,32,2,32,2,32,2,32,9,179,8,179,
	8,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,15,32,15,32,2,73,11,218,2,196,2,196,2,196,2,196,2,196,
	2,183,2,32,11,74,11,213,2,205,2,205,2,205,2,205,2,205,2,187,
	2,32,2,75,11,218,2,196,2,196,2,196,2,196,2,196,2,183,2,32,
	2,76,11,213,2,205,2,205,2,205,2,205,2,205,2,187,2,32,2,77,
	11,214,2,196,2,196,2,196,2,196,2,196,2,183,2,32,2,78,11,201,
	2,205,2,205,2,205,2,205,2,205,2,187,2,32,2,79,11,214,2,196,
	2,196,2,196,2,196,2,196,2,183,2,32,2,80,11,201,2,205,2,205,
	2,205,2,205,2,205,2,187,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,179,2,32,2,214,2,196,2,191,2,32,
	2,186,2,32,11,32,11,179,2,32,2,214,2,196,2,191,2,32,2,186,
	2,32,2,32,11,179,2,32,2,201,2,205,2,184,2,32,2,186,2,32,
	2,32,11,179,2,32,2,201,2,205,2,184,2,32,2,186,2,32,2,32,
	11,186,2,32,2,214,2,196,2,183,2,32,2,186,2,32,2,32,11,186,
	2,32,2,214,2,196,2,183,2,32,2,186,2,32,2,32,11,186,2,32,
	2,201,2,205,2,187,2,32,2,186,2,32,2,32,2,186,2,32,2,201,
	2,205,2,187,2,32,2,186,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,179,2,32,2,211,2,196,2,217,2,32,
	2,186,2,32,11,32,11,179,2,32,2,200,2,205,2,190,2,32,2,186,
	2,32,2,32,11,179,2,32,2,211,2,196,2,217,2,32,2,186,2,32,
	2,32,11,179,2,32,2,200,2,205,2,190,2,32,2,186,2,32,2,32,
	11,186,2,32,2,211,2,196,2,189,2,32,2,186,2,32,2,32,11,186,
	2,32,2,200,2,205,2,188,2,32,2,186,2,32,2,32,11,186,2,32,
	2,211,2,196,2,189,2,32,2,186,2,32,2,32,2,186,2,32,2,200,
	2,205,2,188,2,32,2,186,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,179,2,32,2,214,2,196,2,191,2,32,
	2,186,2,32,11,32,11,179,2,32,2,214,2,196,2,191,2,32,2,186,
	2,32,2,32,11,179,2,32,2,201,2,205,2,184,2,32,2,186,2,32,
	2,32,11,179,2,32,2,201,2,205,2,184,2,32,2,186,2,32,2,32,
	11,186,2,32,2,214,2,196,2,183,2,32,2,186,2,32,2,32,2,186,
	2,32,2,214,2,196,2,183,2,32,2,186,2,32,2,32,2,186,2,32,
	2,201,2,205,2,187,2,32,2,186,2,32,2,32,2,186,2,32,2,201,
	2,205,2,187,2,32,2,186,2,32,2,32,2,32,2,32,9,179,8,179,
	8,32,15,32,15,32,2,32,11,192,2,196,2,189,2,32,2,192,2,196,
	2,189,2,32,11,32,11,192,2,196,2,189,2,32,2,192,2,196,2,189,
	2,32,2,32,11,212,2,205,2,188,2,32,2,212,2,205,2,188,2,32,
	2,32,2,212,2,205,2,188,2,32,2,212,2,205,2,188,2,32,2,32,
	11,211,2,196,2,189,2,32,2,211,2,196,2,189,2,32,2,32,2,211,
	2,196,2,189,2,32,2,211,2,196,2,189,2,32,2,32,2,200,2,205,
	2,188,2,32,2,200,2,205,2,188,2,32,2,32,2,200,2,205,2,188,
	2,32,2,200,2,205,2,188,2,32,2,32,2,32,2,32,9,179,8,179,
	8,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,7,32,7,32,2,81,11,220,2,220,2,220,2,220,2,220,2,220,
	2,220,2,32,11,82,11,219,2,223,2,223,2,223,2,223,2,223,2,219,
	2,32,2,83,11,222,2,223,2,223,2,223,2,223,2,223,2,221,2,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,7,32,7,32,2,32,11,219,2,32,2,220,2,220,2,220,2,32,
	2,219,2,32,11,32,11,219,2,32,2,219,2,223,2,219,2,32,2,219,
	2,32,2,32,11,222,2,32,2,220,2,220,2,220,2,32,2,221,2,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,7,32,7,32,2,32,11,219,2,32,2,219,2,220,2,219,2,32,
	2,219,2,32,11,32,11,219,2,32,2,223,2,223,2,223,2,32,2,219,
	2,32,2,32,2,222,2,32,2,223,2,223,2,223,2,32,2,221,2,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,7,32,7,32,2,32,2,219,2,32,2,220,2,220,2,220,2,32,
	2,219,2,32,11,32,11,219,2,32,2,219,2,223,2,219,2,32,2,219,
	2,32,2,32,2,222,2,32,2,220,2,220,2,220,2,32,2,221,2,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,32,7,32,7,32,2,32,2,219,2,220,2,219,2,32,2,219,2,220,
	2,219,2,32,11,32,11,223,2,223,2,223,2,32,2,223,2,223,2,223,
	2,32,2,32,2,222,2,220,2,221,2,32,2,222,2,220,2,221,2,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,179,
	8,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,179,8,195,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,180,8,179,
	8,32,15,32,15,85,9,115,9,101,9,32,9,67,9,117,9,114,9,115,
	9,111,9,114,9,32,9,75,9,101,9,121,9,115,9,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,91,9,69,7,78,
	7,84,7,69,7,82,7,93,9,32,9,83,9,101,9,108,9,101,9,99,
	9,116,9,115,9,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,
	7,0,7,0,7,0,7,91,9,69,7,83,7,67,7,93,9,32,9,65,
	9,98,9,111,9,114,9,116,9,115,9,32,14,32,2,32,2,179,8,192,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,
	8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,196,8,217,8,177,
	42,223,2,32,2,220,8,223,8,223,8,223,8,223,8,223,8,223,8,220,
	8,32,8,32,8,32,40,220,42,32,42,32,42,32,42,219,2,223,2,32,
	2,220,8,223,8,223,8,223,8,223,8,223,8,254,8,220,8,223,8,223,
	8,223,8,223,8,223,8,223,8,223,8,223,8,223,8,223,8,223,8,223,
	8,223,8,223,8,254,8,223,8,223,8,223,8,223,8};


void SelectOutlineCommand::setunderground(int Underg,int b)
{
   int x,y;
   for (x=1;x<=7;x++)
   for (y=1;y<6;y++) {
	   SelectAnsi[(4+x+(b%8)*9)*2+(3+y+(b/8)*6)*160+1] = Underg;
   }
   ansout << gotoxy(0, 0);
   for (x=0;x<2000;x++){
	  if (SelectAnsi[x<<1] == 0) {
		  SelectAnsi[x<<1]= ' ';
	  }
	  ansout << textattr(SelectAnsi[x * 2 + 1]) << SelectAnsi[x * 2];
	  if (COLS > 80 && (x + 1) % 80 == 0) {
		  ansout << endl;
	  }
   }
}

void SelectOutlineCommand::run()
{
	SDL_Event event;
	int currOutline = FontLibrary::getInstance().currentOutline;
	bool done = false;
	do {
		setunderground(18, currOutline);
		screenEngine.showScreen();
		SDL_Delay(50);
		setunderground(2,  currOutline);
		while (SDL_PollEvent(&event)) {
			switch (event.type) {
				case SDL_KEYDOWN:
					switch (event.key.keysym.sym) {
						case SDLK_ESCAPE:
							done = true;
							break;
						case SDLK_RETURN:
							FontLibrary::getInstance().currentOutline = currOutline;
							done = true;
							break;
						case SDLK_LEFT:
							if (currOutline > 0) {
								currOutline--;
							} else {
								currOutline = 18;
							}
							break;
						case SDLK_RIGHT:
							if (currOutline < 18) {
								currOutline++;
							} else {
								currOutline = 0;
							}
							break;
						case SDLK_DOWN:
							if (currOutline < 16 && currOutline < 11) {
								currOutline += 8;
							}
							break;
						case SDLK_UP:
							if (currOutline > 7) {
								currOutline -= 8;
							}
							break;
						default:
							if (event.key.keysym.sym >= 'A' && event.key.keysym.sym <= 'S') {
								FontLibrary::getInstance().currentOutline = event.key.keysym.sym - 'A';
								done = true;
							}
							if (event.key.keysym.sym >= 'a' && event.key.keysym.sym <= 's') {
								FontLibrary::getInstance().currentOutline = event.key.keysym.sym - 'a';
								done = true;
							}
							break;
					}
			}
		}
	} while (!done);
}

// class SelectFontCommand members
void SelectFontCommand::clearWindow()
{
	for (int y = 5; y <= 17; ++y) {
		ansout << gotoxy(30, y);
		for (int x = 30; x <= 60; ++x) {
			ansout << ' ';
		}
	}
}

void SelectFontCommand::showPreviewCharacter(int fontNumber)
{
	FontLibrary::getInstance().activeFont = fontNumber;
	
	unsigned char tryChar = 'A';
	do {
		if (FontLibrary::getInstance().GetFontChar(tryChar)) {
			break;
		}
	} while (++tryChar <= 'z');
	if (tryChar > 'z') {
		return;
	}
	ansout << textattr(7);
	clearWindow();
	
	int maxX = FontLibrary::getInstance().maxX;
	int maxY = FontLibrary::getInstance().maxY;
	
	TheDrawFont* tdf = FontLibrary::getInstance().fonts[fontNumber];
	
	for (int y = 0; y <= maxY; ++y) {
		ansout << gotoxy(32, (13 - maxY) / 2 + y + 5);
		for (int x = 0; x <= maxX; ++x) {
			unsigned char ch = '\0';
			switch (tdf->fontType) {
				case 0:
				case 1:
					ch = FontLibrary::getInstance().charTable[y][x];
					break;
				case 2:
					ansout << textattr(FontLibrary::getInstance().charTable[y][x * 2 + 1]);
					ch = FontLibrary::getInstance().charTable[y][x * 2];
					break;
			}
			
			if (ch >= ' ') {
				ansout << ch;
			} else {
				ansout << ' ';
			}
		}
	}
}

void SelectFontCommand::run()
{
	DrawBox(9,  5, 26, 17);
	DrawBox(29, 4, 61, 18);
	int offset       = 0;
	int selectedLine = 0;
	showPreviewCharacter(offset + selectedLine);
	int numberOfFonts = FontLibrary::getInstance().fonts.size();
	SDL_Event event;
	bool done = false;
	do {
		for (int y = 0; y < 11 && y < numberOfFonts; ++y) {
			ansout << gotoxy(10, 6 + y);
			if (y == selectedLine) {
				ansout << textattr(32 + 15);
			} else {
				ansout << textattr(2);
			}
			int i = 1;
			if (offset + y < numberOfFonts) {
				for (; i <= FontLibrary::getInstance().fonts[offset + y]->name[0]; ++i) {
					ansout << FontLibrary::getInstance().fonts[offset + y]->name[i];
				}
			}
			for (; i < 17; ++i) {
				ansout << ' ';
			}
		}
		
		screenEngine.showScreen();
		SDL_Delay(50);
		while (SDL_PollEvent(&event)) {
			switch (event.type) {
				case SDL_KEYDOWN:
					switch (event.key.keysym.sym) {
						case SDLK_ESCAPE:
							done = true;
							break;
						case SDLK_RETURN:
							FontLibrary::getInstance().activeFont = offset + selectedLine;
							done = true;
							break;
						case SDLK_UP:
							selectedLine--;
							break;
						case SDLK_DOWN:
							selectedLine++;
							break;
						case SDLK_PAGEDOWN:
							selectedLine = 11;
							offset = min(offset + 11, numberOfFonts - 11);
							break;
						case SDLK_PAGEUP:
							selectedLine = 0;
							offset = max(offset - 11, 0);
							break;
						default:
							break;
					}
			}
		}
		
		if (selectedLine < 0) {
			selectedLine = 0;
			offset--;	 
		}
		if (selectedLine > 10) {
			selectedLine = 10;
			offset++;
		}
		
		if (selectedLine > numberOfFonts - 1) {
			selectedLine = numberOfFonts - 1;
		}
		
		if (offset < 0) {
			offset = 0;
		}
		
		if (offset + 11 > numberOfFonts && numberOfFonts > 11) {
			offset = numberOfFonts - 11;
		}
		
		showPreviewCharacter(offset + selectedLine);
	} while (!done);
}
